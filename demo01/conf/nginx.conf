worker_processes 2;

events {
    worker_connections 1024;
}

http {

    lua_package_path "lualib/?.lua;;";
    lua_package_cpath "lualib/?.so;;";

    client_body_temp_path temp/client_body_temp;
    fastcgi_temp_path temp/fastcgi_temp;
    proxy_temp_path temp/proxy_temp;
    scgi_temp_path temp/scgi_temp;
    uwsgi_temp_path temp/uwsgi_temp;

    lua_shared_dict shared_data 1m;
    
    server {
        listen 8080;
        # access_log off;
        access_log logs/access.log;
        error_log logs/error.log info;

        location / {
            index index.html;
        }

        location /header {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/header.lua;
        }

        location /args {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/args.lua;
        }

        location /rsp {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/response.lua;
        }

        location /add {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/add.lua;
        }

        location /add_i {
            default_type text/html;
            lua_code_cache on;
            internal;
            content_by_lua_block {
                local args = ngx.req.get_uri_args()
                ngx.say(tonumber(args.a) + tonumber(args.b))
            }            
        }

        location /add_i_test {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_block {
                local res = ngx.location.capture("/add_i", {args={a=2, b=8}})
                ngx.say("status:", res.status, " response:", res.body)
            }            
        }

        location /redirect {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_block {
                ngx.redirect("http://www.neohope.com", 302)
            } 
        }

        location /redis {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/redisT.lua;
        }

        location /mysql {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/mysqlT.lua;
        }

        location /share {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_file lua/share.lua;
        }
        
        location /moduletest {  
            default_type 'text/html';  
            lua_code_cache on;  
            content_by_lua_file lua/moduleT.lua;
        }

        location /block {
            default_type text/html;
            lua_code_cache on;
            content_by_lua_block {
                c=ngx.var.arg_count
                if(c==nil) then
                    c=3
                end

                for i=1,c,1 do  
                    ngx.say("<p>Hello, OpenResty!</p>")
                end
            }
        }

        location /nginx {
            default_type text/html;

            set $or "nginx";
            echo "<p>Hello, ${or}!</p>";
        }
    }
}

